@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.int_specifier = constant [4 x i8] c"%d\0A\00"
declare void @exit(i32) 
declare i32 @printf(i8*, ...)
@g_reg0 = constant [12 x i8] c"val is true\00"
@g_reg1 = constant [13 x i8] c"val is false\00"
@g_reg2 = constant [5 x i8] c"true\00"
@g_reg3 = constant [5 x i8] c"true\00"

 
; -----------------------  Program ------------------------ 
 define void @printi(i32) { call i32 (i8*, ...) @printf(i8* getelementptr ([4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0), i32 %0) ret void} 
 define void @print(i8*) { call i32 (i8*, ...) @printf(i8* getelementptr ([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0) ret void } 
 define void @printByValue(i32) {  
 	; ======================= input arguments definition ======================= 
 %p0 = alloca i32 ; val 
 store i32 %0, i32* %p0 
 	; =========================== stack definition ============================= 
 %stack = alloca [50 x i32] 
 	; ============================= function body ============================== 
 %0 = load i32, i32* %p0 
 %reg9 = icmp eq i32 %0, 1 
 br i1 %reg9, label %label_12, label %label_15 
label_12:
 call void @print(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @g_reg0, i32 0, i32 0)) 
 br label %label_18 
label_15:
 call void @print(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @g_reg1, i32 0, i32 0)) 
 br label %label_18 
label_18:
 ret void } 
 define void @main() {  
 	; ======================= input arguments definition ======================= 
 	; =========================== stack definition ============================= 
 %stack = alloca [50 x i32] 
 	; ============================= function body ============================== 
 br label %label_26 
label_26:
 br label %label_30 
label_28:
 br label %label_30 
label_30:
 %reg17 = phi i32 [1, %label_26], [0, %label_28] 
 call void @printByValue(i32 reg17) 
 br label %label_34 
label_34:
 br label %label_38 
label_36:
 br label %label_38 
label_38:
 %reg20 = phi i32 [1, %label_34], [0, %label_36] 
 call void @printByValue(i32 reg20) 
 br label %label_42 
label_42:
 call void @print(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @g_reg2, i32 0, i32 0)) 
 br label %label_45 
label_45:
 br label %label_47 
label_47:
 br label %label_54 
label_49:
 br label %label_51 
label_51:
 call void @print(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @g_reg3, i32 0, i32 0)) 
 br label %label_54 
label_54:
 ret void } 
