@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.str_zero_div  = constant [23 x i8] c"Error division by zero\00"
@.str_0 = constant [17 x i8] c"VariableInitZero\00"
@.str_1 = constant [11 x i8] c"Aritmetics\00"
@.str_2 = constant [10 x i8] c"booltests\00"
@.str_3 = constant [31 x i8] c"ifexpswithboolianfuncsnoparams\00"
@.str_4 = constant [33 x i8] c"ifexpswithboolianfuncswithparams\00"
@.str_5 = constant [31 x i8] c"ifexpwithtrueandfalsevariables\00"
@.str_6 = constant [31 x i8] c"ifexpwithtrueandfalseconstants\00"
@.str_7 = constant [11 x i8] c"whilecheck\00"
@.str_8 = constant [20 x i8] c"whilecheckwithbreak\00"
@.str_9 = constant [29 x i8] c"whilecheckwithbreakwithfuncs\00"
@.str_10 = constant [20 x i8] c"whilecheckwithfuncs\00"
@.str_11 = constant [31 x i8] c"whilecheckcomplexexprwithfuncs\00"
@.str_12 = constant [28 x i8] c"whilecheckwithrecursivefunc\00"
@.str_13 = constant [37 x i8] c"retvalfrombytefunccomparewithinttype\00"
@.str_14 = constant [10 x i8] c"contCheck\00"
@.str_15 = constant [21 x i8] c"testPhilosophicWhile\00"
@.str_16 = constant [22 x i8] c"testPhilosophicWhile2\00"

declare i32 @printf(i8*, ...)                                                   
declare void @exit(i32)                                                         

define void @printi(i32) {                                                      
	call i32 (i8*, ...) @printf(i8* getelementptr ([4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0), i32 %0)
	ret void                                                                       
}                                                                               

define void @print(i8*) {                                                       
	call i32 (i8*, ...) @printf(i8* getelementptr ([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
	ret void                                                                       
}                                                                               

define i32 @truefunc() {                                                        
	; ============================ stack definition ============================   
	%stack = alloca [50 x i32]                                                     ; define a space in the stack for maximum 50 variables
	; ============================= function body ==============================   
	br label %label_19                                                                     ; always TRUE expr
label_19:
	ret i32 1                                                                      ; exit function and return TRUE
label_21:
	ret i32 0                                                                      ; exit function and return FALSE
	ret i32 0                                                                      
}                                                                               

define i32 @truefuncwithparams(i32, i32, i32, i32) {                            
	; ======================= input arguments definition =======================   
	%t0 = alloca i32                                                               ; define a space in the stack for input integer variable aaa and save to register %t0 a pointer to it
	store i32 %0, i32* %t0                                                         ; store the input integer variable aaa in it's assigned space in stack
	%t1 = alloca i32                                                               ; define a space in the stack for input boolean variable aab and save to register %t1 a pointer to it
	store i32 %1, i32* %t1                                                         ; store the input boolean variable aab in it's assigned space in stack
	%t2 = alloca i32                                                               ; define a space in the stack for input byte variable aac and save to register %t2 a pointer to it
	store i32 %2, i32* %t2                                                         ; store the input byte variable aac in it's assigned space in stack
	%t3 = alloca i32                                                               ; define a space in the stack for input boolean variable aabc and save to register %t3 a pointer to it
	store i32 %3, i32* %t3                                                         ; store the input boolean variable aabc in it's assigned space in stack
	; ============================ stack definition ============================   
	%stack = alloca [50 x i32]                                                     ; define a space in the stack for maximum 50 variables
	; ============================= function body ==============================   
	br label %label_40                                                                     ; always TRUE expr
label_40:
	ret i32 1                                                                      ; exit function and return TRUE
label_42:
	ret i32 0                                                                      ; exit function and return FALSE
	ret i32 0                                                                      
}                                                                               

define i32 @falsefunc() {                                                       
	; ============================ stack definition ============================   
	%stack = alloca [50 x i32]                                                     ; define a space in the stack for maximum 50 variables
	; ============================= function body ==============================   
	br label %label_54                                                                     ; always FALSE expr
label_52:
	ret i32 1                                                                      ; exit function and return TRUE
label_54:
	ret i32 0                                                                      ; exit function and return FALSE
	ret i32 0                                                                      
}                                                                               

define i32 @falsefuncwithparams(i32, i32, i32, i32) {                           
	; ======================= input arguments definition =======================   
	%t0 = alloca i32                                                               ; define a space in the stack for input integer variable caaa and save to register %t0 a pointer to it
	store i32 %0, i32* %t0                                                         ; store the input integer variable caaa in it's assigned space in stack
	%t1 = alloca i32                                                               ; define a space in the stack for input boolean variable caab and save to register %t1 a pointer to it
	store i32 %1, i32* %t1                                                         ; store the input boolean variable caab in it's assigned space in stack
	%t2 = alloca i32                                                               ; define a space in the stack for input byte variable caac and save to register %t2 a pointer to it
	store i32 %2, i32* %t2                                                         ; store the input byte variable caac in it's assigned space in stack
	%t3 = alloca i32                                                               ; define a space in the stack for input boolean variable caabc and save to register %t3 a pointer to it
	store i32 %3, i32* %t3                                                         ; store the input boolean variable caabc in it's assigned space in stack
	; ============================ stack definition ============================   
	%stack = alloca [50 x i32]                                                     ; define a space in the stack for maximum 50 variables
	; ============================= function body ==============================   
	br label %label_75                                                                     ; always FALSE expr
label_73:
	ret i32 1                                                                      ; exit function and return TRUE
label_75:
	ret i32 0                                                                      ; exit function and return FALSE
	ret i32 0                                                                      
}                                                                               

define void @ifexpswithboolianfuncswithparams() {                               
	; ============================ stack definition ============================   
	%stack = alloca [50 x i32]                                                     ; define a space in the stack for maximum 50 variables
	; ============================= function body ==============================   
	%t0 = add i32 0, 4                                                             ; define register %t0 to hold a constant 32 bit value (i32) of 4
	br label %label_86                                                                     ; always TRUE expr
label_86:
	br label %label_90                                                                     ; jump to phi from TRUE prespective
label_88:
	br label %label_90                                                                     ; jump to phi from FALSE prespective
label_90:
	%t1 = phi i32 [1, %label_86], [0, %label_88]                                   ; according to the source label, put 1 or 0 in register %t1
	%t2 = add i32 0, 7                                                             ; define register %t2 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_100                                                                     ; always FALSE expr
label_94:
	br label %label_98                                                                     ; always TRUE expr
label_96:
	br label %label_98                                                                     ; always FALSE expr
label_98:
	br label %label_102                                                                     ; jump to phi from TRUE prespective
label_100:
	br label %label_102                                                                     ; jump to phi from FALSE prespective
label_102:
	%t3 = phi i32 [1, %label_98], [0, %label_100]                                  ; according to the source label, put 1 or 0 in register %t3
	%t4 = call i32 @falsefuncwithparams(i32 %t0, i32 %t1, i32 %t2, i32 %t3)        
	%t5 = icmp eq i32 %t4, 1                                                       ; check the boolean value returned from function falsefuncwithparams, which is being held inside %t5
	br i1 %t5, label %label_107, label %label_111                                                    
label_107:
	%t6 = add i32 0, 0                                                             ; define register %t6 to hold a constant 32 bit value (i32) of 0
	call void @printi(i32 %t6)                                                     
	br label %label_111                                                                     
label_111:
	%t7 = add i32 0, 4                                                             ; define register %t7 to hold a constant 32 bit value (i32) of 4
	br label %label_114                                                                     ; always TRUE expr
label_114:
	br label %label_118                                                                     ; jump to phi from TRUE prespective
label_116:
	br label %label_118                                                                     ; jump to phi from FALSE prespective
label_118:
	%t8 = phi i32 [1, %label_114], [0, %label_116]                                 ; according to the source label, put 1 or 0 in register %t8
	%t9 = add i32 0, 7                                                             ; define register %t9 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_128                                                                     ; always FALSE expr
label_122:
	br label %label_126                                                                     ; always TRUE expr
label_124:
	br label %label_126                                                                     ; always FALSE expr
label_126:
	br label %label_130                                                                     ; jump to phi from TRUE prespective
label_128:
	br label %label_130                                                                     ; jump to phi from FALSE prespective
label_130:
	%t10 = phi i32 [1, %label_126], [0, %label_128]                                ; according to the source label, put 1 or 0 in register %t10
	%t11 = call i32 @falsefuncwithparams(i32 %t7, i32 %t8, i32 %t9, i32 %t10)      
	%t12 = icmp eq i32 %t11, 1                                                     ; check the boolean value returned from function falsefuncwithparams, which is being held inside %t12
	br i1 %t12, label %label_159, label %label_135                                                   
label_135:
	%t13 = add i32 0, 4                                                            ; define register %t13 to hold a constant 32 bit value (i32) of 4
	br label %label_138                                                                     ; always TRUE expr
label_138:
	br label %label_142                                                                     ; jump to phi from TRUE prespective
label_140:
	br label %label_142                                                                     ; jump to phi from FALSE prespective
label_142:
	%t14 = phi i32 [1, %label_138], [0, %label_140]                                ; according to the source label, put 1 or 0 in register %t14
	%t15 = add i32 0, 7                                                            ; define register %t15 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_152                                                                     ; always FALSE expr
label_146:
	br label %label_150                                                                     ; always TRUE expr
label_148:
	br label %label_150                                                                     ; always FALSE expr
label_150:
	br label %label_154                                                                     ; jump to phi from TRUE prespective
label_152:
	br label %label_154                                                                     ; jump to phi from FALSE prespective
label_154:
	%t16 = phi i32 [1, %label_150], [0, %label_152]                                ; according to the source label, put 1 or 0 in register %t16
	%t17 = call i32 @truefuncwithparams(i32 %t13, i32 %t14, i32 %t15, i32 %t16)    
	%t18 = icmp eq i32 %t17, 1                                                     ; check the boolean value returned from function truefuncwithparams, which is being held inside %t18
	br i1 %t18, label %label_159, label %label_163                                                   
label_159:
	%t19 = add i32 0, 1                                                            ; define register %t19 to hold a constant 32 bit value (i32) of 1
	call void @printi(i32 %t19)                                                    
	br label %label_167                                                                     
label_163:
	%t20 = add i32 0, 11                                                           ; define register %t20 to hold a constant 32 bit value (i32) of 11
	call void @printi(i32 %t20)                                                    
	br label %label_167                                                                     
label_167:
	%t21 = add i32 0, 4                                                            ; define register %t21 to hold a constant 32 bit value (i32) of 4
	br label %label_170                                                                     ; always TRUE expr
label_170:
	br label %label_174                                                                     ; jump to phi from TRUE prespective
label_172:
	br label %label_174                                                                     ; jump to phi from FALSE prespective
label_174:
	%t22 = phi i32 [1, %label_170], [0, %label_172]                                ; according to the source label, put 1 or 0 in register %t22
	%t23 = add i32 0, 7                                                            ; define register %t23 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_184                                                                     ; always FALSE expr
label_178:
	br label %label_182                                                                     ; always TRUE expr
label_180:
	br label %label_182                                                                     ; always FALSE expr
label_182:
	br label %label_186                                                                     ; jump to phi from TRUE prespective
label_184:
	br label %label_186                                                                     ; jump to phi from FALSE prespective
label_186:
	%t24 = phi i32 [1, %label_182], [0, %label_184]                                ; according to the source label, put 1 or 0 in register %t24
	%t25 = call i32 @truefuncwithparams(i32 %t21, i32 %t22, i32 %t23, i32 %t24)    
	%t26 = icmp eq i32 %t25, 1                                                     ; check the boolean value returned from function truefuncwithparams, which is being held inside %t26
	br i1 %t26, label %label_215, label %label_191                                                   
label_191:
	%t27 = add i32 0, 4                                                            ; define register %t27 to hold a constant 32 bit value (i32) of 4
	br label %label_194                                                                     ; always TRUE expr
label_194:
	br label %label_198                                                                     ; jump to phi from TRUE prespective
label_196:
	br label %label_198                                                                     ; jump to phi from FALSE prespective
label_198:
	%t28 = phi i32 [1, %label_194], [0, %label_196]                                ; according to the source label, put 1 or 0 in register %t28
	%t29 = add i32 0, 7                                                            ; define register %t29 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_208                                                                     ; always FALSE expr
label_202:
	br label %label_206                                                                     ; always TRUE expr
label_204:
	br label %label_206                                                                     ; always FALSE expr
label_206:
	br label %label_210                                                                     ; jump to phi from TRUE prespective
label_208:
	br label %label_210                                                                     ; jump to phi from FALSE prespective
label_210:
	%t30 = phi i32 [1, %label_206], [0, %label_208]                                ; according to the source label, put 1 or 0 in register %t30
	%t31 = call i32 @truefuncwithparams(i32 %t27, i32 %t28, i32 %t29, i32 %t30)    
	%t32 = icmp eq i32 %t31, 1                                                     ; check the boolean value returned from function truefuncwithparams, which is being held inside %t32
	br i1 %t32, label %label_215, label %label_219                                                   
label_215:
	%t33 = add i32 0, 2                                                            ; define register %t33 to hold a constant 32 bit value (i32) of 2
	call void @printi(i32 %t33)                                                    
	br label %label_223                                                                     
label_219:
	%t34 = add i32 0, 22                                                           ; define register %t34 to hold a constant 32 bit value (i32) of 22
	call void @printi(i32 %t34)                                                    
	br label %label_223                                                                     
label_223:
	%t35 = add i32 0, 4                                                            ; define register %t35 to hold a constant 32 bit value (i32) of 4
	br label %label_226                                                                     ; always TRUE expr
label_226:
	br label %label_230                                                                     ; jump to phi from TRUE prespective
label_228:
	br label %label_230                                                                     ; jump to phi from FALSE prespective
label_230:
	%t36 = phi i32 [1, %label_226], [0, %label_228]                                ; according to the source label, put 1 or 0 in register %t36
	%t37 = add i32 0, 7                                                            ; define register %t37 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_240                                                                     ; always FALSE expr
label_234:
	br label %label_238                                                                     ; always TRUE expr
label_236:
	br label %label_238                                                                     ; always FALSE expr
label_238:
	br label %label_242                                                                     ; jump to phi from TRUE prespective
label_240:
	br label %label_242                                                                     ; jump to phi from FALSE prespective
label_242:
	%t38 = phi i32 [1, %label_238], [0, %label_240]                                ; according to the source label, put 1 or 0 in register %t38
	%t39 = call i32 @truefuncwithparams(i32 %t35, i32 %t36, i32 %t37, i32 %t38)    
	%t40 = icmp eq i32 %t39, 1                                                     ; check the boolean value returned from function truefuncwithparams, which is being held inside %t40
	br i1 %t40, label %label_247, label %label_275                                                   
label_247:
	%t41 = add i32 0, 4                                                            ; define register %t41 to hold a constant 32 bit value (i32) of 4
	br label %label_250                                                                     ; always TRUE expr
label_250:
	br label %label_254                                                                     ; jump to phi from TRUE prespective
label_252:
	br label %label_254                                                                     ; jump to phi from FALSE prespective
label_254:
	%t42 = phi i32 [1, %label_250], [0, %label_252]                                ; according to the source label, put 1 or 0 in register %t42
	%t43 = add i32 0, 7                                                            ; define register %t43 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_264                                                                     ; always FALSE expr
label_258:
	br label %label_262                                                                     ; always TRUE expr
label_260:
	br label %label_262                                                                     ; always FALSE expr
label_262:
	br label %label_266                                                                     ; jump to phi from TRUE prespective
label_264:
	br label %label_266                                                                     ; jump to phi from FALSE prespective
label_266:
	%t44 = phi i32 [1, %label_262], [0, %label_264]                                ; according to the source label, put 1 or 0 in register %t44
	%t45 = call i32 @truefuncwithparams(i32 %t41, i32 %t42, i32 %t43, i32 %t44)    
	%t46 = icmp eq i32 %t45, 1                                                     ; check the boolean value returned from function truefuncwithparams, which is being held inside %t46
	br i1 %t46, label %label_271, label %label_275                                                   
label_271:
	%t47 = add i32 0, 3                                                            ; define register %t47 to hold a constant 32 bit value (i32) of 3
	call void @printi(i32 %t47)                                                    
	br label %label_279                                                                     
label_275:
	%t48 = add i32 0, 3                                                            ; define register %t48 to hold a constant 32 bit value (i32) of 3
	call void @printi(i32 %t48)                                                    
	br label %label_279                                                                     
label_279:
	%t49 = add i32 0, 4                                                            ; define register %t49 to hold a constant 32 bit value (i32) of 4
	br label %label_282                                                                     ; always TRUE expr
label_282:
	br label %label_286                                                                     ; jump to phi from TRUE prespective
label_284:
	br label %label_286                                                                     ; jump to phi from FALSE prespective
label_286:
	%t50 = phi i32 [1, %label_282], [0, %label_284]                                ; according to the source label, put 1 or 0 in register %t50
	%t51 = add i32 0, 7                                                            ; define register %t51 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_296                                                                     ; always FALSE expr
label_290:
	br label %label_294                                                                     ; always TRUE expr
label_292:
	br label %label_294                                                                     ; always FALSE expr
label_294:
	br label %label_298                                                                     ; jump to phi from TRUE prespective
label_296:
	br label %label_298                                                                     ; jump to phi from FALSE prespective
label_298:
	%t52 = phi i32 [1, %label_294], [0, %label_296]                                ; according to the source label, put 1 or 0 in register %t52
	%t53 = call i32 @truefuncwithparams(i32 %t49, i32 %t50, i32 %t51, i32 %t52)    
	%t54 = icmp eq i32 %t53, 1                                                     ; check the boolean value returned from function truefuncwithparams, which is being held inside %t54
	br i1 %t54, label %label_303, label %label_331                                                   
label_303:
	%t55 = add i32 0, 4                                                            ; define register %t55 to hold a constant 32 bit value (i32) of 4
	br label %label_306                                                                     ; always TRUE expr
label_306:
	br label %label_310                                                                     ; jump to phi from TRUE prespective
label_308:
	br label %label_310                                                                     ; jump to phi from FALSE prespective
label_310:
	%t56 = phi i32 [1, %label_306], [0, %label_308]                                ; according to the source label, put 1 or 0 in register %t56
	%t57 = add i32 0, 7                                                            ; define register %t57 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_320                                                                     ; always FALSE expr
label_314:
	br label %label_318                                                                     ; always TRUE expr
label_316:
	br label %label_318                                                                     ; always FALSE expr
label_318:
	br label %label_322                                                                     ; jump to phi from TRUE prespective
label_320:
	br label %label_322                                                                     ; jump to phi from FALSE prespective
label_322:
	%t58 = phi i32 [1, %label_318], [0, %label_320]                                ; according to the source label, put 1 or 0 in register %t58
	%t59 = call i32 @falsefuncwithparams(i32 %t55, i32 %t56, i32 %t57, i32 %t58)   
	%t60 = icmp eq i32 %t59, 1                                                     ; check the boolean value returned from function falsefuncwithparams, which is being held inside %t60
	br i1 %t60, label %label_327, label %label_331                                                   
label_327:
	%t61 = add i32 0, 4                                                            ; define register %t61 to hold a constant 32 bit value (i32) of 4
	call void @printi(i32 %t61)                                                    
	br label %label_335                                                                     
label_331:
	%t62 = add i32 0, 44                                                           ; define register %t62 to hold a constant 32 bit value (i32) of 44
	call void @printi(i32 %t62)                                                    
	br label %label_335                                                                     
label_335:
	%t63 = add i32 0, 4                                                            ; define register %t63 to hold a constant 32 bit value (i32) of 4
	br label %label_338                                                                     ; always TRUE expr
label_338:
	br label %label_342                                                                     ; jump to phi from TRUE prespective
label_340:
	br label %label_342                                                                     ; jump to phi from FALSE prespective
label_342:
	%t64 = phi i32 [1, %label_338], [0, %label_340]                                ; according to the source label, put 1 or 0 in register %t64
	%t65 = add i32 0, 7                                                            ; define register %t65 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_352                                                                     ; always FALSE expr
label_346:
	br label %label_350                                                                     ; always TRUE expr
label_348:
	br label %label_350                                                                     ; always FALSE expr
label_350:
	br label %label_354                                                                     ; jump to phi from TRUE prespective
label_352:
	br label %label_354                                                                     ; jump to phi from FALSE prespective
label_354:
	%t66 = phi i32 [1, %label_350], [0, %label_352]                                ; according to the source label, put 1 or 0 in register %t66
	%t67 = call i32 @truefuncwithparams(i32 %t63, i32 %t64, i32 %t65, i32 %t66)    
	%t68 = icmp eq i32 %t67, 1                                                     ; check the boolean value returned from function truefuncwithparams, which is being held inside %t68
	br i1 %t68, label %label_359, label %label_411                                                   
label_359:
	%t69 = add i32 0, 4                                                            ; define register %t69 to hold a constant 32 bit value (i32) of 4
	br label %label_362                                                                     ; always TRUE expr
label_362:
	br label %label_366                                                                     ; jump to phi from TRUE prespective
label_364:
	br label %label_366                                                                     ; jump to phi from FALSE prespective
label_366:
	%t70 = phi i32 [1, %label_362], [0, %label_364]                                ; according to the source label, put 1 or 0 in register %t70
	%t71 = add i32 0, 7                                                            ; define register %t71 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_376                                                                     ; always FALSE expr
label_370:
	br label %label_374                                                                     ; always TRUE expr
label_372:
	br label %label_374                                                                     ; always FALSE expr
label_374:
	br label %label_378                                                                     ; jump to phi from TRUE prespective
label_376:
	br label %label_378                                                                     ; jump to phi from FALSE prespective
label_378:
	%t72 = phi i32 [1, %label_374], [0, %label_376]                                ; according to the source label, put 1 or 0 in register %t72
	%t73 = call i32 @truefuncwithparams(i32 %t69, i32 %t70, i32 %t71, i32 %t72)    
	%t74 = icmp eq i32 %t73, 1                                                     ; check the boolean value returned from function truefuncwithparams, which is being held inside %t74
	br i1 %t74, label %label_383, label %label_411                                                   
label_383:
	%t75 = add i32 0, 4                                                            ; define register %t75 to hold a constant 32 bit value (i32) of 4
	br label %label_386                                                                     ; always TRUE expr
label_386:
	br label %label_390                                                                     ; jump to phi from TRUE prespective
label_388:
	br label %label_390                                                                     ; jump to phi from FALSE prespective
label_390:
	%t76 = phi i32 [1, %label_386], [0, %label_388]                                ; according to the source label, put 1 or 0 in register %t76
	%t77 = add i32 0, 7                                                            ; define register %t77 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_400                                                                     ; always FALSE expr
label_394:
	br label %label_398                                                                     ; always TRUE expr
label_396:
	br label %label_398                                                                     ; always FALSE expr
label_398:
	br label %label_402                                                                     ; jump to phi from TRUE prespective
label_400:
	br label %label_402                                                                     ; jump to phi from FALSE prespective
label_402:
	%t78 = phi i32 [1, %label_398], [0, %label_400]                                ; according to the source label, put 1 or 0 in register %t78
	%t79 = call i32 @falsefuncwithparams(i32 %t75, i32 %t76, i32 %t77, i32 %t78)   
	%t80 = icmp eq i32 %t79, 1                                                     ; check the boolean value returned from function falsefuncwithparams, which is being held inside %t80
	br i1 %t80, label %label_407, label %label_411                                                   
label_407:
	%t81 = add i32 0, 5                                                            ; define register %t81 to hold a constant 32 bit value (i32) of 5
	call void @printi(i32 %t81)                                                    
	br label %label_415                                                                     
label_411:
	%t82 = add i32 0, 55                                                           ; define register %t82 to hold a constant 32 bit value (i32) of 55
	call void @printi(i32 %t82)                                                    
	br label %label_415                                                                     
label_415:
	%t83 = add i32 0, 4                                                            ; define register %t83 to hold a constant 32 bit value (i32) of 4
	br label %label_418                                                                     ; always TRUE expr
label_418:
	br label %label_422                                                                     ; jump to phi from TRUE prespective
label_420:
	br label %label_422                                                                     ; jump to phi from FALSE prespective
label_422:
	%t84 = phi i32 [1, %label_418], [0, %label_420]                                ; according to the source label, put 1 or 0 in register %t84
	%t85 = add i32 0, 7                                                            ; define register %t85 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_432                                                                     ; always FALSE expr
label_426:
	br label %label_430                                                                     ; always TRUE expr
label_428:
	br label %label_430                                                                     ; always FALSE expr
label_430:
	br label %label_434                                                                     ; jump to phi from TRUE prespective
label_432:
	br label %label_434                                                                     ; jump to phi from FALSE prespective
label_434:
	%t86 = phi i32 [1, %label_430], [0, %label_432]                                ; according to the source label, put 1 or 0 in register %t86
	%t87 = call i32 @truefuncwithparams(i32 %t83, i32 %t84, i32 %t85, i32 %t86)    
	%t88 = icmp eq i32 %t87, 1                                                     ; check the boolean value returned from function truefuncwithparams, which is being held inside %t88
	br i1 %t88, label %label_439, label %label_491                                                   
label_439:
	%t89 = add i32 0, 4                                                            ; define register %t89 to hold a constant 32 bit value (i32) of 4
	br label %label_442                                                                     ; always TRUE expr
label_442:
	br label %label_446                                                                     ; jump to phi from TRUE prespective
label_444:
	br label %label_446                                                                     ; jump to phi from FALSE prespective
label_446:
	%t90 = phi i32 [1, %label_442], [0, %label_444]                                ; according to the source label, put 1 or 0 in register %t90
	%t91 = add i32 0, 7                                                            ; define register %t91 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_456                                                                     ; always FALSE expr
label_450:
	br label %label_454                                                                     ; always TRUE expr
label_452:
	br label %label_454                                                                     ; always FALSE expr
label_454:
	br label %label_458                                                                     ; jump to phi from TRUE prespective
label_456:
	br label %label_458                                                                     ; jump to phi from FALSE prespective
label_458:
	%t92 = phi i32 [1, %label_454], [0, %label_456]                                ; according to the source label, put 1 or 0 in register %t92
	%t93 = call i32 @truefuncwithparams(i32 %t89, i32 %t90, i32 %t91, i32 %t92)    
	%t94 = icmp eq i32 %t93, 1                                                     ; check the boolean value returned from function truefuncwithparams, which is being held inside %t94
	br i1 %t94, label %label_463, label %label_491                                                   
label_463:
	%t95 = add i32 0, 4                                                            ; define register %t95 to hold a constant 32 bit value (i32) of 4
	br label %label_466                                                                     ; always TRUE expr
label_466:
	br label %label_470                                                                     ; jump to phi from TRUE prespective
label_468:
	br label %label_470                                                                     ; jump to phi from FALSE prespective
label_470:
	%t96 = phi i32 [1, %label_466], [0, %label_468]                                ; according to the source label, put 1 or 0 in register %t96
	%t97 = add i32 0, 7                                                            ; define register %t97 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_480                                                                     ; always FALSE expr
label_474:
	br label %label_478                                                                     ; always TRUE expr
label_476:
	br label %label_478                                                                     ; always FALSE expr
label_478:
	br label %label_482                                                                     ; jump to phi from TRUE prespective
label_480:
	br label %label_482                                                                     ; jump to phi from FALSE prespective
label_482:
	%t98 = phi i32 [1, %label_478], [0, %label_480]                                ; according to the source label, put 1 or 0 in register %t98
	%t99 = call i32 @truefuncwithparams(i32 %t95, i32 %t96, i32 %t97, i32 %t98)    
	%t100 = icmp eq i32 %t99, 1                                                    ; check the boolean value returned from function truefuncwithparams, which is being held inside %t100
	br i1 %t100, label %label_487, label %label_491                                                  
label_487:
	%t101 = add i32 0, 6                                                           ; define register %t101 to hold a constant 32 bit value (i32) of 6
	call void @printi(i32 %t101)                                                   
	br label %label_495                                                                     
label_491:
	%t102 = add i32 0, 66                                                          ; define register %t102 to hold a constant 32 bit value (i32) of 66
	call void @printi(i32 %t102)                                                   
	br label %label_495                                                                     
label_495:
	%t103 = add i32 0, 4                                                           ; define register %t103 to hold a constant 32 bit value (i32) of 4
	br label %label_498                                                                     ; always TRUE expr
label_498:
	br label %label_502                                                                     ; jump to phi from TRUE prespective
label_500:
	br label %label_502                                                                     ; jump to phi from FALSE prespective
label_502:
	%t104 = phi i32 [1, %label_498], [0, %label_500]                               ; according to the source label, put 1 or 0 in register %t104
	%t105 = add i32 0, 7                                                           ; define register %t105 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_512                                                                     ; always FALSE expr
label_506:
	br label %label_510                                                                     ; always TRUE expr
label_508:
	br label %label_510                                                                     ; always FALSE expr
label_510:
	br label %label_514                                                                     ; jump to phi from TRUE prespective
label_512:
	br label %label_514                                                                     ; jump to phi from FALSE prespective
label_514:
	%t106 = phi i32 [1, %label_510], [0, %label_512]                               ; according to the source label, put 1 or 0 in register %t106
	%t107 = call i32 @falsefuncwithparams(i32 %t103, i32 %t104, i32 %t105, i32 %t106)
	%t108 = icmp eq i32 %t107, 1                                                   ; check the boolean value returned from function falsefuncwithparams, which is being held inside %t108
	br i1 %t108, label %label_519, label %label_571                                                  
label_519:
	%t109 = add i32 0, 4                                                           ; define register %t109 to hold a constant 32 bit value (i32) of 4
	br label %label_522                                                                     ; always TRUE expr
label_522:
	br label %label_526                                                                     ; jump to phi from TRUE prespective
label_524:
	br label %label_526                                                                     ; jump to phi from FALSE prespective
label_526:
	%t110 = phi i32 [1, %label_522], [0, %label_524]                               ; according to the source label, put 1 or 0 in register %t110
	%t111 = add i32 0, 7                                                           ; define register %t111 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_536                                                                     ; always FALSE expr
label_530:
	br label %label_534                                                                     ; always TRUE expr
label_532:
	br label %label_534                                                                     ; always FALSE expr
label_534:
	br label %label_538                                                                     ; jump to phi from TRUE prespective
label_536:
	br label %label_538                                                                     ; jump to phi from FALSE prespective
label_538:
	%t112 = phi i32 [1, %label_534], [0, %label_536]                               ; according to the source label, put 1 or 0 in register %t112
	%t113 = call i32 @truefuncwithparams(i32 %t109, i32 %t110, i32 %t111, i32 %t112)
	%t114 = icmp eq i32 %t113, 1                                                   ; check the boolean value returned from function truefuncwithparams, which is being held inside %t114
	br i1 %t114, label %label_543, label %label_571                                                  
label_543:
	%t115 = add i32 0, 4                                                           ; define register %t115 to hold a constant 32 bit value (i32) of 4
	br label %label_546                                                                     ; always TRUE expr
label_546:
	br label %label_550                                                                     ; jump to phi from TRUE prespective
label_548:
	br label %label_550                                                                     ; jump to phi from FALSE prespective
label_550:
	%t116 = phi i32 [1, %label_546], [0, %label_548]                               ; according to the source label, put 1 or 0 in register %t116
	%t117 = add i32 0, 7                                                           ; define register %t117 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_560                                                                     ; always FALSE expr
label_554:
	br label %label_558                                                                     ; always TRUE expr
label_556:
	br label %label_558                                                                     ; always FALSE expr
label_558:
	br label %label_562                                                                     ; jump to phi from TRUE prespective
label_560:
	br label %label_562                                                                     ; jump to phi from FALSE prespective
label_562:
	%t118 = phi i32 [1, %label_558], [0, %label_560]                               ; according to the source label, put 1 or 0 in register %t118
	%t119 = call i32 @truefuncwithparams(i32 %t115, i32 %t116, i32 %t117, i32 %t118)
	%t120 = icmp eq i32 %t119, 1                                                   ; check the boolean value returned from function truefuncwithparams, which is being held inside %t120
	br i1 %t120, label %label_567, label %label_571                                                  
label_567:
	%t121 = add i32 0, 7                                                           ; define register %t121 to hold a constant 32 bit value (i32) of 7
	call void @printi(i32 %t121)                                                   
	br label %label_575                                                                     
label_571:
	%t122 = add i32 0, 77                                                          ; define register %t122 to hold a constant 32 bit value (i32) of 77
	call void @printi(i32 %t122)                                                   
	br label %label_575                                                                     
label_575:
	%t123 = add i32 0, 4                                                           ; define register %t123 to hold a constant 32 bit value (i32) of 4
	br label %label_578                                                                     ; always TRUE expr
label_578:
	br label %label_582                                                                     ; jump to phi from TRUE prespective
label_580:
	br label %label_582                                                                     ; jump to phi from FALSE prespective
label_582:
	%t124 = phi i32 [1, %label_578], [0, %label_580]                               ; according to the source label, put 1 or 0 in register %t124
	%t125 = add i32 0, 7                                                           ; define register %t125 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_592                                                                     ; always FALSE expr
label_586:
	br label %label_590                                                                     ; always TRUE expr
label_588:
	br label %label_590                                                                     ; always FALSE expr
label_590:
	br label %label_594                                                                     ; jump to phi from TRUE prespective
label_592:
	br label %label_594                                                                     ; jump to phi from FALSE prespective
label_594:
	%t126 = phi i32 [1, %label_590], [0, %label_592]                               ; according to the source label, put 1 or 0 in register %t126
	%t127 = call i32 @falsefuncwithparams(i32 %t123, i32 %t124, i32 %t125, i32 %t126)
	%t128 = icmp eq i32 %t127, 1                                                   ; check the boolean value returned from function falsefuncwithparams, which is being held inside %t128
	br i1 %t128, label %label_647, label %label_599                                                  
label_599:
	%t129 = add i32 0, 4                                                           ; define register %t129 to hold a constant 32 bit value (i32) of 4
	br label %label_602                                                                     ; always TRUE expr
label_602:
	br label %label_606                                                                     ; jump to phi from TRUE prespective
label_604:
	br label %label_606                                                                     ; jump to phi from FALSE prespective
label_606:
	%t130 = phi i32 [1, %label_602], [0, %label_604]                               ; according to the source label, put 1 or 0 in register %t130
	%t131 = add i32 0, 7                                                           ; define register %t131 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_616                                                                     ; always FALSE expr
label_610:
	br label %label_614                                                                     ; always TRUE expr
label_612:
	br label %label_614                                                                     ; always FALSE expr
label_614:
	br label %label_618                                                                     ; jump to phi from TRUE prespective
label_616:
	br label %label_618                                                                     ; jump to phi from FALSE prespective
label_618:
	%t132 = phi i32 [1, %label_614], [0, %label_616]                               ; according to the source label, put 1 or 0 in register %t132
	%t133 = call i32 @falsefuncwithparams(i32 %t129, i32 %t130, i32 %t131, i32 %t132)
	%t134 = icmp eq i32 %t133, 1                                                   ; check the boolean value returned from function falsefuncwithparams, which is being held inside %t134
	br i1 %t134, label %label_623, label %label_651                                                  
label_623:
	%t135 = add i32 0, 4                                                           ; define register %t135 to hold a constant 32 bit value (i32) of 4
	br label %label_626                                                                     ; always TRUE expr
label_626:
	br label %label_630                                                                     ; jump to phi from TRUE prespective
label_628:
	br label %label_630                                                                     ; jump to phi from FALSE prespective
label_630:
	%t136 = phi i32 [1, %label_626], [0, %label_628]                               ; according to the source label, put 1 or 0 in register %t136
	%t137 = add i32 0, 7                                                           ; define register %t137 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_640                                                                     ; always FALSE expr
label_634:
	br label %label_638                                                                     ; always TRUE expr
label_636:
	br label %label_638                                                                     ; always FALSE expr
label_638:
	br label %label_642                                                                     ; jump to phi from TRUE prespective
label_640:
	br label %label_642                                                                     ; jump to phi from FALSE prespective
label_642:
	%t138 = phi i32 [1, %label_638], [0, %label_640]                               ; according to the source label, put 1 or 0 in register %t138
	%t139 = call i32 @truefuncwithparams(i32 %t135, i32 %t136, i32 %t137, i32 %t138)
	%t140 = icmp eq i32 %t139, 1                                                   ; check the boolean value returned from function truefuncwithparams, which is being held inside %t140
	br i1 %t140, label %label_647, label %label_651                                                  
label_647:
	%t141 = add i32 0, 8                                                           ; define register %t141 to hold a constant 32 bit value (i32) of 8
	call void @printi(i32 %t141)                                                   
	br label %label_655                                                                     
label_651:
	%t142 = add i32 0, 88                                                          ; define register %t142 to hold a constant 32 bit value (i32) of 88
	call void @printi(i32 %t142)                                                   
	br label %label_655                                                                     
label_655:
	%t143 = add i32 0, 4                                                           ; define register %t143 to hold a constant 32 bit value (i32) of 4
	br label %label_658                                                                     ; always TRUE expr
label_658:
	br label %label_662                                                                     ; jump to phi from TRUE prespective
label_660:
	br label %label_662                                                                     ; jump to phi from FALSE prespective
label_662:
	%t144 = phi i32 [1, %label_658], [0, %label_660]                               ; according to the source label, put 1 or 0 in register %t144
	%t145 = add i32 0, 7                                                           ; define register %t145 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_672                                                                     ; always FALSE expr
label_666:
	br label %label_670                                                                     ; always TRUE expr
label_668:
	br label %label_670                                                                     ; always FALSE expr
label_670:
	br label %label_674                                                                     ; jump to phi from TRUE prespective
label_672:
	br label %label_674                                                                     ; jump to phi from FALSE prespective
label_674:
	%t146 = phi i32 [1, %label_670], [0, %label_672]                               ; according to the source label, put 1 or 0 in register %t146
	%t147 = call i32 @falsefuncwithparams(i32 %t143, i32 %t144, i32 %t145, i32 %t146)
	%t148 = icmp eq i32 %t147, 1                                                   ; check the boolean value returned from function falsefuncwithparams, which is being held inside %t148
	br i1 %t148, label %label_727, label %label_679                                                  
label_679:
	%t149 = add i32 0, 4                                                           ; define register %t149 to hold a constant 32 bit value (i32) of 4
	br label %label_682                                                                     ; always TRUE expr
label_682:
	br label %label_686                                                                     ; jump to phi from TRUE prespective
label_684:
	br label %label_686                                                                     ; jump to phi from FALSE prespective
label_686:
	%t150 = phi i32 [1, %label_682], [0, %label_684]                               ; according to the source label, put 1 or 0 in register %t150
	%t151 = add i32 0, 7                                                           ; define register %t151 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_696                                                                     ; always FALSE expr
label_690:
	br label %label_694                                                                     ; always TRUE expr
label_692:
	br label %label_694                                                                     ; always FALSE expr
label_694:
	br label %label_698                                                                     ; jump to phi from TRUE prespective
label_696:
	br label %label_698                                                                     ; jump to phi from FALSE prespective
label_698:
	%t152 = phi i32 [1, %label_694], [0, %label_696]                               ; according to the source label, put 1 or 0 in register %t152
	%t153 = call i32 @falsefuncwithparams(i32 %t149, i32 %t150, i32 %t151, i32 %t152)
	%t154 = icmp eq i32 %t153, 1                                                   ; check the boolean value returned from function falsefuncwithparams, which is being held inside %t154
	br i1 %t154, label %label_727, label %label_703                                                  
label_703:
	%t155 = add i32 0, 4                                                           ; define register %t155 to hold a constant 32 bit value (i32) of 4
	br label %label_706                                                                     ; always TRUE expr
label_706:
	br label %label_710                                                                     ; jump to phi from TRUE prespective
label_708:
	br label %label_710                                                                     ; jump to phi from FALSE prespective
label_710:
	%t156 = phi i32 [1, %label_706], [0, %label_708]                               ; according to the source label, put 1 or 0 in register %t156
	%t157 = add i32 0, 7                                                           ; define register %t157 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_720                                                                     ; always FALSE expr
label_714:
	br label %label_718                                                                     ; always TRUE expr
label_716:
	br label %label_718                                                                     ; always FALSE expr
label_718:
	br label %label_722                                                                     ; jump to phi from TRUE prespective
label_720:
	br label %label_722                                                                     ; jump to phi from FALSE prespective
label_722:
	%t158 = phi i32 [1, %label_718], [0, %label_720]                               ; according to the source label, put 1 or 0 in register %t158
	%t159 = call i32 @truefuncwithparams(i32 %t155, i32 %t156, i32 %t157, i32 %t158)
	%t160 = icmp eq i32 %t159, 1                                                   ; check the boolean value returned from function truefuncwithparams, which is being held inside %t160
	br i1 %t160, label %label_727, label %label_731                                                  
label_727:
	%t161 = add i32 0, 9                                                           ; define register %t161 to hold a constant 32 bit value (i32) of 9
	call void @printi(i32 %t161)                                                   
	br label %label_735                                                                     
label_731:
	%t162 = add i32 0, 99                                                          ; define register %t162 to hold a constant 32 bit value (i32) of 99
	call void @printi(i32 %t162)                                                   
	br label %label_735                                                                     
label_735:
	%t163 = add i32 0, 4                                                           ; define register %t163 to hold a constant 32 bit value (i32) of 4
	br label %label_738                                                                     ; always TRUE expr
label_738:
	br label %label_742                                                                     ; jump to phi from TRUE prespective
label_740:
	br label %label_742                                                                     ; jump to phi from FALSE prespective
label_742:
	%t164 = phi i32 [1, %label_738], [0, %label_740]                               ; according to the source label, put 1 or 0 in register %t164
	%t165 = add i32 0, 7                                                           ; define register %t165 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_752                                                                     ; always FALSE expr
label_746:
	br label %label_750                                                                     ; always TRUE expr
label_748:
	br label %label_750                                                                     ; always FALSE expr
label_750:
	br label %label_754                                                                     ; jump to phi from TRUE prespective
label_752:
	br label %label_754                                                                     ; jump to phi from FALSE prespective
label_754:
	%t166 = phi i32 [1, %label_750], [0, %label_752]                               ; according to the source label, put 1 or 0 in register %t166
	%t167 = call i32 @falsefuncwithparams(i32 %t163, i32 %t164, i32 %t165, i32 %t166)
	%t168 = icmp eq i32 %t167, 1                                                   ; check the boolean value returned from function falsefuncwithparams, which is being held inside %t168
	br i1 %t168, label %label_759, label %label_835                                                  
label_759:
	%t169 = add i32 0, 4                                                           ; define register %t169 to hold a constant 32 bit value (i32) of 4
	br label %label_762                                                                     ; always TRUE expr
label_762:
	br label %label_766                                                                     ; jump to phi from TRUE prespective
label_764:
	br label %label_766                                                                     ; jump to phi from FALSE prespective
label_766:
	%t170 = phi i32 [1, %label_762], [0, %label_764]                               ; according to the source label, put 1 or 0 in register %t170
	%t171 = add i32 0, 7                                                           ; define register %t171 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_776                                                                     ; always FALSE expr
label_770:
	br label %label_774                                                                     ; always TRUE expr
label_772:
	br label %label_774                                                                     ; always FALSE expr
label_774:
	br label %label_778                                                                     ; jump to phi from TRUE prespective
label_776:
	br label %label_778                                                                     ; jump to phi from FALSE prespective
label_778:
	%t172 = phi i32 [1, %label_774], [0, %label_776]                               ; according to the source label, put 1 or 0 in register %t172
	%t173 = call i32 @falsefuncwithparams(i32 %t169, i32 %t170, i32 %t171, i32 %t172)
	%t174 = icmp eq i32 %t173, 1                                                   ; check the boolean value returned from function falsefuncwithparams, which is being held inside %t174
	br i1 %t174, label %label_783, label %label_835                                                  
label_783:
	%t175 = add i32 0, 4                                                           ; define register %t175 to hold a constant 32 bit value (i32) of 4
	br label %label_786                                                                     ; always TRUE expr
label_786:
	br label %label_790                                                                     ; jump to phi from TRUE prespective
label_788:
	br label %label_790                                                                     ; jump to phi from FALSE prespective
label_790:
	%t176 = phi i32 [1, %label_786], [0, %label_788]                               ; according to the source label, put 1 or 0 in register %t176
	%t177 = add i32 0, 7                                                           ; define register %t177 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_800                                                                     ; always FALSE expr
label_794:
	br label %label_798                                                                     ; always TRUE expr
label_796:
	br label %label_798                                                                     ; always FALSE expr
label_798:
	br label %label_802                                                                     ; jump to phi from TRUE prespective
label_800:
	br label %label_802                                                                     ; jump to phi from FALSE prespective
label_802:
	%t178 = phi i32 [1, %label_798], [0, %label_800]                               ; according to the source label, put 1 or 0 in register %t178
	%t179 = call i32 @truefuncwithparams(i32 %t175, i32 %t176, i32 %t177, i32 %t178)
	%t180 = icmp eq i32 %t179, 1                                                   ; check the boolean value returned from function truefuncwithparams, which is being held inside %t180
	br i1 %t180, label %label_807, label %label_835                                                  
label_807:
	%t181 = add i32 0, 4                                                           ; define register %t181 to hold a constant 32 bit value (i32) of 4
	br label %label_810                                                                     ; always TRUE expr
label_810:
	br label %label_814                                                                     ; jump to phi from TRUE prespective
label_812:
	br label %label_814                                                                     ; jump to phi from FALSE prespective
label_814:
	%t182 = phi i32 [1, %label_810], [0, %label_812]                               ; according to the source label, put 1 or 0 in register %t182
	%t183 = add i32 0, 7                                                           ; define register %t183 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_824                                                                     ; always FALSE expr
label_818:
	br label %label_822                                                                     ; always TRUE expr
label_820:
	br label %label_822                                                                     ; always FALSE expr
label_822:
	br label %label_826                                                                     ; jump to phi from TRUE prespective
label_824:
	br label %label_826                                                                     ; jump to phi from FALSE prespective
label_826:
	%t184 = phi i32 [1, %label_822], [0, %label_824]                               ; according to the source label, put 1 or 0 in register %t184
	%t185 = call i32 @truefuncwithparams(i32 %t181, i32 %t182, i32 %t183, i32 %t184)
	%t186 = icmp eq i32 %t185, 1                                                   ; check the boolean value returned from function truefuncwithparams, which is being held inside %t186
	br i1 %t186, label %label_831, label %label_835                                                  
label_831:
	%t187 = add i32 0, 10                                                          ; define register %t187 to hold a constant 32 bit value (i32) of 10
	call void @printi(i32 %t187)                                                   
	br label %label_839                                                                     
label_835:
	%t188 = add i32 0, 1010                                                        ; define register %t188 to hold a constant 32 bit value (i32) of 1010
	call void @printi(i32 %t188)                                                   
	br label %label_839                                                                     
label_839:
	%t189 = add i32 0, 4                                                           ; define register %t189 to hold a constant 32 bit value (i32) of 4
	br label %label_842                                                                     ; always TRUE expr
label_842:
	br label %label_846                                                                     ; jump to phi from TRUE prespective
label_844:
	br label %label_846                                                                     ; jump to phi from FALSE prespective
label_846:
	%t190 = phi i32 [1, %label_842], [0, %label_844]                               ; according to the source label, put 1 or 0 in register %t190
	%t191 = add i32 0, 7                                                           ; define register %t191 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_856                                                                     ; always FALSE expr
label_850:
	br label %label_854                                                                     ; always TRUE expr
label_852:
	br label %label_854                                                                     ; always FALSE expr
label_854:
	br label %label_858                                                                     ; jump to phi from TRUE prespective
label_856:
	br label %label_858                                                                     ; jump to phi from FALSE prespective
label_858:
	%t192 = phi i32 [1, %label_854], [0, %label_856]                               ; according to the source label, put 1 or 0 in register %t192
	%t193 = call i32 @truefuncwithparams(i32 %t189, i32 %t190, i32 %t191, i32 %t192)
	%t194 = icmp eq i32 %t193, 1                                                   ; check the boolean value returned from function truefuncwithparams, which is being held inside %t194
	br i1 %t194, label %label_863, label %label_939                                                  
label_863:
	%t195 = add i32 0, 4                                                           ; define register %t195 to hold a constant 32 bit value (i32) of 4
	br label %label_866                                                                     ; always TRUE expr
label_866:
	br label %label_870                                                                     ; jump to phi from TRUE prespective
label_868:
	br label %label_870                                                                     ; jump to phi from FALSE prespective
label_870:
	%t196 = phi i32 [1, %label_866], [0, %label_868]                               ; according to the source label, put 1 or 0 in register %t196
	%t197 = add i32 0, 7                                                           ; define register %t197 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_880                                                                     ; always FALSE expr
label_874:
	br label %label_878                                                                     ; always TRUE expr
label_876:
	br label %label_878                                                                     ; always FALSE expr
label_878:
	br label %label_882                                                                     ; jump to phi from TRUE prespective
label_880:
	br label %label_882                                                                     ; jump to phi from FALSE prespective
label_882:
	%t198 = phi i32 [1, %label_878], [0, %label_880]                               ; according to the source label, put 1 or 0 in register %t198
	%t199 = call i32 @truefuncwithparams(i32 %t195, i32 %t196, i32 %t197, i32 %t198)
	%t200 = icmp eq i32 %t199, 1                                                   ; check the boolean value returned from function truefuncwithparams, which is being held inside %t200
	br i1 %t200, label %label_887, label %label_939                                                  
label_887:
	%t201 = add i32 0, 4                                                           ; define register %t201 to hold a constant 32 bit value (i32) of 4
	br label %label_890                                                                     ; always TRUE expr
label_890:
	br label %label_894                                                                     ; jump to phi from TRUE prespective
label_892:
	br label %label_894                                                                     ; jump to phi from FALSE prespective
label_894:
	%t202 = phi i32 [1, %label_890], [0, %label_892]                               ; according to the source label, put 1 or 0 in register %t202
	%t203 = add i32 0, 7                                                           ; define register %t203 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_904                                                                     ; always FALSE expr
label_898:
	br label %label_902                                                                     ; always TRUE expr
label_900:
	br label %label_902                                                                     ; always FALSE expr
label_902:
	br label %label_906                                                                     ; jump to phi from TRUE prespective
label_904:
	br label %label_906                                                                     ; jump to phi from FALSE prespective
label_906:
	%t204 = phi i32 [1, %label_902], [0, %label_904]                               ; according to the source label, put 1 or 0 in register %t204
	%t205 = call i32 @truefuncwithparams(i32 %t201, i32 %t202, i32 %t203, i32 %t204)
	%t206 = icmp eq i32 %t205, 1                                                   ; check the boolean value returned from function truefuncwithparams, which is being held inside %t206
	br i1 %t206, label %label_911, label %label_939                                                  
label_911:
	%t207 = add i32 0, 4                                                           ; define register %t207 to hold a constant 32 bit value (i32) of 4
	br label %label_914                                                                     ; always TRUE expr
label_914:
	br label %label_918                                                                     ; jump to phi from TRUE prespective
label_916:
	br label %label_918                                                                     ; jump to phi from FALSE prespective
label_918:
	%t208 = phi i32 [1, %label_914], [0, %label_916]                               ; according to the source label, put 1 or 0 in register %t208
	%t209 = add i32 0, 7                                                           ; define register %t209 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_928                                                                     ; always FALSE expr
label_922:
	br label %label_926                                                                     ; always TRUE expr
label_924:
	br label %label_926                                                                     ; always FALSE expr
label_926:
	br label %label_930                                                                     ; jump to phi from TRUE prespective
label_928:
	br label %label_930                                                                     ; jump to phi from FALSE prespective
label_930:
	%t210 = phi i32 [1, %label_926], [0, %label_928]                               ; according to the source label, put 1 or 0 in register %t210
	%t211 = call i32 @truefuncwithparams(i32 %t207, i32 %t208, i32 %t209, i32 %t210)
	%t212 = icmp eq i32 %t211, 1                                                   ; check the boolean value returned from function truefuncwithparams, which is being held inside %t212
	br i1 %t212, label %label_935, label %label_939                                                  
label_935:
	%t213 = add i32 0, 11                                                          ; define register %t213 to hold a constant 32 bit value (i32) of 11
	call void @printi(i32 %t213)                                                   
	br label %label_943                                                                     
label_939:
	%t214 = add i32 0, 1111                                                        ; define register %t214 to hold a constant 32 bit value (i32) of 1111
	call void @printi(i32 %t214)                                                   
	br label %label_943                                                                     
label_943:
	%t215 = add i32 0, 4                                                           ; define register %t215 to hold a constant 32 bit value (i32) of 4
	br label %label_946                                                                     ; always TRUE expr
label_946:
	br label %label_950                                                                     ; jump to phi from TRUE prespective
label_948:
	br label %label_950                                                                     ; jump to phi from FALSE prespective
label_950:
	%t216 = phi i32 [1, %label_946], [0, %label_948]                               ; according to the source label, put 1 or 0 in register %t216
	%t217 = add i32 0, 7                                                           ; define register %t217 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_960                                                                     ; always FALSE expr
label_954:
	br label %label_958                                                                     ; always TRUE expr
label_956:
	br label %label_958                                                                     ; always FALSE expr
label_958:
	br label %label_962                                                                     ; jump to phi from TRUE prespective
label_960:
	br label %label_962                                                                     ; jump to phi from FALSE prespective
label_962:
	%t218 = phi i32 [1, %label_958], [0, %label_960]                               ; according to the source label, put 1 or 0 in register %t218
	%t219 = call i32 @truefuncwithparams(i32 %t215, i32 %t216, i32 %t217, i32 %t218)
	%t220 = icmp eq i32 %t219, 1                                                   ; check the boolean value returned from function truefuncwithparams, which is being held inside %t220
	br i1 %t220, label %label_991, label %label_967                                                  
label_967:
	%t221 = add i32 0, 4                                                           ; define register %t221 to hold a constant 32 bit value (i32) of 4
	br label %label_970                                                                     ; always TRUE expr
label_970:
	br label %label_974                                                                     ; jump to phi from TRUE prespective
label_972:
	br label %label_974                                                                     ; jump to phi from FALSE prespective
label_974:
	%t222 = phi i32 [1, %label_970], [0, %label_972]                               ; according to the source label, put 1 or 0 in register %t222
	%t223 = add i32 0, 7                                                           ; define register %t223 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_984                                                                     ; always FALSE expr
label_978:
	br label %label_982                                                                     ; always TRUE expr
label_980:
	br label %label_982                                                                     ; always FALSE expr
label_982:
	br label %label_986                                                                     ; jump to phi from TRUE prespective
label_984:
	br label %label_986                                                                     ; jump to phi from FALSE prespective
label_986:
	%t224 = phi i32 [1, %label_982], [0, %label_984]                               ; according to the source label, put 1 or 0 in register %t224
	%t225 = call i32 @truefuncwithparams(i32 %t221, i32 %t222, i32 %t223, i32 %t224)
	%t226 = icmp eq i32 %t225, 1                                                   ; check the boolean value returned from function truefuncwithparams, which is being held inside %t226
	br i1 %t226, label %label_991, label %label_1043                                                  
label_991:
	%t227 = add i32 0, 4                                                           ; define register %t227 to hold a constant 32 bit value (i32) of 4
	br label %label_994                                                                     ; always TRUE expr
label_994:
	br label %label_998                                                                     ; jump to phi from TRUE prespective
label_996:
	br label %label_998                                                                     ; jump to phi from FALSE prespective
label_998:
	%t228 = phi i32 [1, %label_994], [0, %label_996]                               ; according to the source label, put 1 or 0 in register %t228
	%t229 = add i32 0, 7                                                           ; define register %t229 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_1008                                                                     ; always FALSE expr
label_1002:
	br label %label_1006                                                                     ; always TRUE expr
label_1004:
	br label %label_1006                                                                     ; always FALSE expr
label_1006:
	br label %label_1010                                                                     ; jump to phi from TRUE prespective
label_1008:
	br label %label_1010                                                                     ; jump to phi from FALSE prespective
label_1010:
	%t230 = phi i32 [1, %label_1006], [0, %label_1008]                             ; according to the source label, put 1 or 0 in register %t230
	%t231 = call i32 @truefuncwithparams(i32 %t227, i32 %t228, i32 %t229, i32 %t230)
	%t232 = icmp eq i32 %t231, 1                                                   ; check the boolean value returned from function truefuncwithparams, which is being held inside %t232
	br i1 %t232, label %label_1015, label %label_1043                                                  
label_1015:
	%t233 = add i32 0, 4                                                           ; define register %t233 to hold a constant 32 bit value (i32) of 4
	br label %label_1018                                                                     ; always TRUE expr
label_1018:
	br label %label_1022                                                                     ; jump to phi from TRUE prespective
label_1020:
	br label %label_1022                                                                     ; jump to phi from FALSE prespective
label_1022:
	%t234 = phi i32 [1, %label_1018], [0, %label_1020]                             ; according to the source label, put 1 or 0 in register %t234
	%t235 = add i32 0, 7                                                           ; define register %t235 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_1032                                                                     ; always FALSE expr
label_1026:
	br label %label_1030                                                                     ; always TRUE expr
label_1028:
	br label %label_1030                                                                     ; always FALSE expr
label_1030:
	br label %label_1034                                                                     ; jump to phi from TRUE prespective
label_1032:
	br label %label_1034                                                                     ; jump to phi from FALSE prespective
label_1034:
	%t236 = phi i32 [1, %label_1030], [0, %label_1032]                             ; according to the source label, put 1 or 0 in register %t236
	%t237 = call i32 @truefuncwithparams(i32 %t233, i32 %t234, i32 %t235, i32 %t236)
	%t238 = icmp eq i32 %t237, 1                                                   ; check the boolean value returned from function truefuncwithparams, which is being held inside %t238
	br i1 %t238, label %label_1039, label %label_1043                                                  
label_1039:
	%t239 = add i32 0, 12                                                          ; define register %t239 to hold a constant 32 bit value (i32) of 12
	call void @printi(i32 %t239)                                                   
	br label %label_1047                                                                     
label_1043:
	%t240 = add i32 0, 1212                                                        ; define register %t240 to hold a constant 32 bit value (i32) of 1212
	call void @printi(i32 %t240)                                                   
	br label %label_1047                                                                     
label_1047:
	%t241 = add i32 0, 4                                                           ; define register %t241 to hold a constant 32 bit value (i32) of 4
	br label %label_1050                                                                     ; always TRUE expr
label_1050:
	br label %label_1054                                                                     ; jump to phi from TRUE prespective
label_1052:
	br label %label_1054                                                                     ; jump to phi from FALSE prespective
label_1054:
	%t242 = phi i32 [1, %label_1050], [0, %label_1052]                             ; according to the source label, put 1 or 0 in register %t242
	%t243 = add i32 0, 7                                                           ; define register %t243 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_1064                                                                     ; always FALSE expr
label_1058:
	br label %label_1062                                                                     ; always TRUE expr
label_1060:
	br label %label_1062                                                                     ; always FALSE expr
label_1062:
	br label %label_1066                                                                     ; jump to phi from TRUE prespective
label_1064:
	br label %label_1066                                                                     ; jump to phi from FALSE prespective
label_1066:
	%t244 = phi i32 [1, %label_1062], [0, %label_1064]                             ; according to the source label, put 1 or 0 in register %t244
	%t245 = call i32 @falsefuncwithparams(i32 %t241, i32 %t242, i32 %t243, i32 %t244)
	%t246 = icmp eq i32 %t245, 1                                                   ; check the boolean value returned from function falsefuncwithparams, which is being held inside %t246
	br i1 %t246, label %label_1095, label %label_1071                                                  
label_1071:
	%t247 = add i32 0, 4                                                           ; define register %t247 to hold a constant 32 bit value (i32) of 4
	br label %label_1074                                                                     ; always TRUE expr
label_1074:
	br label %label_1078                                                                     ; jump to phi from TRUE prespective
label_1076:
	br label %label_1078                                                                     ; jump to phi from FALSE prespective
label_1078:
	%t248 = phi i32 [1, %label_1074], [0, %label_1076]                             ; according to the source label, put 1 or 0 in register %t248
	%t249 = add i32 0, 7                                                           ; define register %t249 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_1088                                                                     ; always FALSE expr
label_1082:
	br label %label_1086                                                                     ; always TRUE expr
label_1084:
	br label %label_1086                                                                     ; always FALSE expr
label_1086:
	br label %label_1090                                                                     ; jump to phi from TRUE prespective
label_1088:
	br label %label_1090                                                                     ; jump to phi from FALSE prespective
label_1090:
	%t250 = phi i32 [1, %label_1086], [0, %label_1088]                             ; according to the source label, put 1 or 0 in register %t250
	%t251 = call i32 @truefuncwithparams(i32 %t247, i32 %t248, i32 %t249, i32 %t250)
	%t252 = icmp eq i32 %t251, 1                                                   ; check the boolean value returned from function truefuncwithparams, which is being held inside %t252
	br i1 %t252, label %label_1095, label %label_1147                                                  
label_1095:
	%t253 = add i32 0, 4                                                           ; define register %t253 to hold a constant 32 bit value (i32) of 4
	br label %label_1098                                                                     ; always TRUE expr
label_1098:
	br label %label_1102                                                                     ; jump to phi from TRUE prespective
label_1100:
	br label %label_1102                                                                     ; jump to phi from FALSE prespective
label_1102:
	%t254 = phi i32 [1, %label_1098], [0, %label_1100]                             ; according to the source label, put 1 or 0 in register %t254
	%t255 = add i32 0, 7                                                           ; define register %t255 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_1112                                                                     ; always FALSE expr
label_1106:
	br label %label_1110                                                                     ; always TRUE expr
label_1108:
	br label %label_1110                                                                     ; always FALSE expr
label_1110:
	br label %label_1114                                                                     ; jump to phi from TRUE prespective
label_1112:
	br label %label_1114                                                                     ; jump to phi from FALSE prespective
label_1114:
	%t256 = phi i32 [1, %label_1110], [0, %label_1112]                             ; according to the source label, put 1 or 0 in register %t256
	%t257 = call i32 @falsefuncwithparams(i32 %t253, i32 %t254, i32 %t255, i32 %t256)
	%t258 = icmp eq i32 %t257, 1                                                   ; check the boolean value returned from function falsefuncwithparams, which is being held inside %t258
	br i1 %t258, label %label_1143, label %label_1119                                                  
label_1119:
	%t259 = add i32 0, 4                                                           ; define register %t259 to hold a constant 32 bit value (i32) of 4
	br label %label_1122                                                                     ; always TRUE expr
label_1122:
	br label %label_1126                                                                     ; jump to phi from TRUE prespective
label_1124:
	br label %label_1126                                                                     ; jump to phi from FALSE prespective
label_1126:
	%t260 = phi i32 [1, %label_1122], [0, %label_1124]                             ; according to the source label, put 1 or 0 in register %t260
	%t261 = add i32 0, 7                                                           ; define register %t261 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_1136                                                                     ; always FALSE expr
label_1130:
	br label %label_1134                                                                     ; always TRUE expr
label_1132:
	br label %label_1134                                                                     ; always FALSE expr
label_1134:
	br label %label_1138                                                                     ; jump to phi from TRUE prespective
label_1136:
	br label %label_1138                                                                     ; jump to phi from FALSE prespective
label_1138:
	%t262 = phi i32 [1, %label_1134], [0, %label_1136]                             ; according to the source label, put 1 or 0 in register %t262
	%t263 = call i32 @truefuncwithparams(i32 %t259, i32 %t260, i32 %t261, i32 %t262)
	%t264 = icmp eq i32 %t263, 1                                                   ; check the boolean value returned from function truefuncwithparams, which is being held inside %t264
	br i1 %t264, label %label_1143, label %label_1147                                                  
label_1143:
	%t265 = add i32 0, 13                                                          ; define register %t265 to hold a constant 32 bit value (i32) of 13
	call void @printi(i32 %t265)                                                   
	br label %label_1151                                                                     
label_1147:
	%t266 = add i32 0, 1313                                                        ; define register %t266 to hold a constant 32 bit value (i32) of 1313
	call void @printi(i32 %t266)                                                   
	br label %label_1151                                                                     
label_1151:
	%t267 = add i32 0, 4                                                           ; define register %t267 to hold a constant 32 bit value (i32) of 4
	br label %label_1154                                                                     ; always TRUE expr
label_1154:
	br label %label_1158                                                                     ; jump to phi from TRUE prespective
label_1156:
	br label %label_1158                                                                     ; jump to phi from FALSE prespective
label_1158:
	%t268 = phi i32 [1, %label_1154], [0, %label_1156]                             ; according to the source label, put 1 or 0 in register %t268
	%t269 = add i32 0, 7                                                           ; define register %t269 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_1168                                                                     ; always FALSE expr
label_1162:
	br label %label_1166                                                                     ; always TRUE expr
label_1164:
	br label %label_1166                                                                     ; always FALSE expr
label_1166:
	br label %label_1170                                                                     ; jump to phi from TRUE prespective
label_1168:
	br label %label_1170                                                                     ; jump to phi from FALSE prespective
label_1170:
	%t270 = phi i32 [1, %label_1166], [0, %label_1168]                             ; according to the source label, put 1 or 0 in register %t270
	%t271 = call i32 @falsefuncwithparams(i32 %t267, i32 %t268, i32 %t269, i32 %t270)
	%t272 = icmp eq i32 %t271, 1                                                   ; check the boolean value returned from function falsefuncwithparams, which is being held inside %t272
	br i1 %t272, label %label_1247, label %label_1175                                                  
label_1175:
	%t273 = add i32 0, 4                                                           ; define register %t273 to hold a constant 32 bit value (i32) of 4
	br label %label_1178                                                                     ; always TRUE expr
label_1178:
	br label %label_1182                                                                     ; jump to phi from TRUE prespective
label_1180:
	br label %label_1182                                                                     ; jump to phi from FALSE prespective
label_1182:
	%t274 = phi i32 [1, %label_1178], [0, %label_1180]                             ; according to the source label, put 1 or 0 in register %t274
	%t275 = add i32 0, 7                                                           ; define register %t275 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_1192                                                                     ; always FALSE expr
label_1186:
	br label %label_1190                                                                     ; always TRUE expr
label_1188:
	br label %label_1190                                                                     ; always FALSE expr
label_1190:
	br label %label_1194                                                                     ; jump to phi from TRUE prespective
label_1192:
	br label %label_1194                                                                     ; jump to phi from FALSE prespective
label_1194:
	%t276 = phi i32 [1, %label_1190], [0, %label_1192]                             ; according to the source label, put 1 or 0 in register %t276
	%t277 = call i32 @truefuncwithparams(i32 %t273, i32 %t274, i32 %t275, i32 %t276)
	%t278 = icmp eq i32 %t277, 1                                                   ; check the boolean value returned from function truefuncwithparams, which is being held inside %t278
	br i1 %t278, label %label_1247, label %label_1199                                                  
label_1199:
	%t279 = add i32 0, 4                                                           ; define register %t279 to hold a constant 32 bit value (i32) of 4
	br label %label_1202                                                                     ; always TRUE expr
label_1202:
	br label %label_1206                                                                     ; jump to phi from TRUE prespective
label_1204:
	br label %label_1206                                                                     ; jump to phi from FALSE prespective
label_1206:
	%t280 = phi i32 [1, %label_1202], [0, %label_1204]                             ; according to the source label, put 1 or 0 in register %t280
	%t281 = add i32 0, 7                                                           ; define register %t281 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_1216                                                                     ; always FALSE expr
label_1210:
	br label %label_1214                                                                     ; always TRUE expr
label_1212:
	br label %label_1214                                                                     ; always FALSE expr
label_1214:
	br label %label_1218                                                                     ; jump to phi from TRUE prespective
label_1216:
	br label %label_1218                                                                     ; jump to phi from FALSE prespective
label_1218:
	%t282 = phi i32 [1, %label_1214], [0, %label_1216]                             ; according to the source label, put 1 or 0 in register %t282
	%t283 = call i32 @falsefuncwithparams(i32 %t279, i32 %t280, i32 %t281, i32 %t282)
	%t284 = icmp eq i32 %t283, 1                                                   ; check the boolean value returned from function falsefuncwithparams, which is being held inside %t284
	br i1 %t284, label %label_1247, label %label_1223                                                  
label_1223:
	%t285 = add i32 0, 4                                                           ; define register %t285 to hold a constant 32 bit value (i32) of 4
	br label %label_1226                                                                     ; always TRUE expr
label_1226:
	br label %label_1230                                                                     ; jump to phi from TRUE prespective
label_1228:
	br label %label_1230                                                                     ; jump to phi from FALSE prespective
label_1230:
	%t286 = phi i32 [1, %label_1226], [0, %label_1228]                             ; according to the source label, put 1 or 0 in register %t286
	%t287 = add i32 0, 7                                                           ; define register %t287 to hold a constant 8 bit value (but its still an i32 reg) of 7
	br label %label_1240                                                                     ; always FALSE expr
label_1234:
	br label %label_1238                                                                     ; always TRUE expr
label_1236:
	br label %label_1238                                                                     ; always FALSE expr
label_1238:
	br label %label_1242                                                                     ; jump to phi from TRUE prespective
label_1240:
	br label %label_1242                                                                     ; jump to phi from FALSE prespective
label_1242:
	%t288 = phi i32 [1, %label_1238], [0, %label_1240]                             ; according to the source label, put 1 or 0 in register %t288
	%t289 = call i32 @falsefuncwithparams(i32 %t285, i32 %t286, i32 %t287, i32 %t288)
	%t290 = icmp eq i32 %t289, 1                                                   ; check the boolean value returned from function falsefuncwithparams, which is being held inside %t290
	br i1 %t290, label %label_1247, label %label_1251                                                  
label_1247:
	%t291 = add i32 0, 14                                                          ; define register %t291 to hold a constant 32 bit value (i32) of 14
	call void @printi(i32 %t291)                                                   
	br label %label_1255                                                                     
label_1251:
	%t292 = add i32 0, 1414                                                        ; define register %t292 to hold a constant 32 bit value (i32) of 1414
	call void @printi(i32 %t292)                                                   
	br label %label_1255                                                                     
label_1255:
	ret void                                                                       
}                                                                               

define void @main() {                                                           
	; ============================ stack definition ============================   
	%stack = alloca [50 x i32]                                                     ; define a space in the stack for maximum 50 variables
	; ============================= function body ==============================   
	call void @print(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str_0, i32 0, i32 0))
	call void @print(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str_1, i32 0, i32 0))
	call void @print(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str_2, i32 0, i32 0))
	call void @print(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str_3, i32 0, i32 0))
	call void @print(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str_4, i32 0, i32 0))
	call void @print(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str_5, i32 0, i32 0))
	call void @print(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str_6, i32 0, i32 0))
	call void @print(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str_7, i32 0, i32 0))
	call void @print(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str_8, i32 0, i32 0))
	call void @print(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str_9, i32 0, i32 0))
	call void @print(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str_10, i32 0, i32 0))
	call void @print(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str_11, i32 0, i32 0))
	call void @print(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str_12, i32 0, i32 0))
	call void @print(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str_13, i32 0, i32 0))
	call void @print(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str_14, i32 0, i32 0))
	call void @print(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str_15, i32 0, i32 0))
	call void @print(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str_16, i32 0, i32 0))
	ret void                                                                       
}                                                                               

